<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd"
    version="6.21.0" timestamp="2020-12-07T19:42:27.087">
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/BoundingBox.java">
<violation beginline="12" endline="12" begincolumn="19" endcolumn="33" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="polyhedra" class="BoundingBox" variable="lowerLeftVertex" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="34" endline="34" begincolumn="24" endcolumn="38" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="BoundingBox" variable="lowerLeft" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'lowerLeft' is not assigned and could be declared final
</violation>
<violation beginline="34" endline="34" begincolumn="41" endcolumn="56" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="BoundingBox" variable="upperRight" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'upperRight' is not assigned and could be declared final
</violation>
<violation beginline="48" endline="48" begincolumn="24" endcolumn="36" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="BoundingBox" variable="xUpper" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'xUpper' is not assigned and could be declared final
</violation>
<violation beginline="48" endline="48" begincolumn="39" endcolumn="51" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="BoundingBox" variable="yUpper" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'yUpper' is not assigned and could be declared final
</violation>
<violation beginline="48" endline="48" begincolumn="54" endcolumn="66" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="BoundingBox" variable="zUpper" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'zUpper' is not assigned and could be declared final
</violation>
<violation beginline="78" endline="78" begincolumn="37" endcolumn="50" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="setUpperRightVertex" variable="newPoint" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'newPoint' is not assigned and could be declared final
</violation>
<violation beginline="90" endline="90" begincolumn="44" endcolumn="44" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="setUpperRightVertex" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="90" endline="90" begincolumn="54" endcolumn="54" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="setUpperRightVertex" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
<violation beginline="90" endline="90" begincolumn="64" endcolumn="64" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="setUpperRightVertex" variable="z" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like z
</violation>
<violation beginline="90" endline="90" begincolumn="37" endcolumn="44" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="setUpperRightVertex" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'x' is not assigned and could be declared final
</violation>
<violation beginline="90" endline="90" begincolumn="47" endcolumn="54" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="setUpperRightVertex" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'y' is not assigned and could be declared final
</violation>
<violation beginline="90" endline="90" begincolumn="57" endcolumn="64" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="setUpperRightVertex" variable="z" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'z' is not assigned and could be declared final
</violation>
<violation beginline="103" endline="103" begincolumn="23" endcolumn="39" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="merge" variable="other" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'other' is not assigned and could be declared final
</violation>
<violation beginline="105" endline="106" begincolumn="30" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="BoundingBox" method="merge" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="105" endline="106" begincolumn="30" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="BoundingBox" method="merge" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="108" endline="109" begincolumn="30" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="BoundingBox" method="merge" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="108" endline="109" begincolumn="30" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="BoundingBox" method="merge" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="111" endline="112" begincolumn="30" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="BoundingBox" method="merge" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="111" endline="112" begincolumn="30" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="BoundingBox" method="merge" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="120" endline="120" begincolumn="23" endcolumn="42" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="BoundingBox" method="scale" variable="scalingFactor" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'scalingFactor' is not assigned and could be declared final
</violation>
<violation beginline="126" endline="130" begincolumn="12" endcolumn="5" rule="ProperCloneImplementation" ruleset="Error Prone" package="polyhedra" class="BoundingBox" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#propercloneimplementation" priority="2">
Object clone() should be implemented with super.clone()
</violation>
<violation beginline="126" endline="130" begincolumn="12" endcolumn="5" rule="CloneThrowsCloneNotSupportedException" ruleset="Error Prone" package="polyhedra" class="BoundingBox" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonethrowsclonenotsupportedexception" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/Composite.java">
<violation beginline="22" endline="22" begincolumn="25" endcolumn="30" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="polyhedra" class="Composite" variable="theBox" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="22" endline="22" begincolumn="25" endcolumn="30" rule="ImmutableField" ruleset="Design" package="polyhedra" class="Composite" variable="theBox" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'theBox' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="27" endline="27" begincolumn="30" endcolumn="41" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="polyhedra" class="Composite" variable="allPolyhedra" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="27" endline="27" begincolumn="30" endcolumn="41" rule="ImmutableField" ruleset="Design" package="polyhedra" class="Composite" variable="allPolyhedra" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'allPolyhedra' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="34" endline="34" begincolumn="29" endcolumn="52" rule="UseDiamondOperator" ruleset="Code Style" package="polyhedra" class="Composite" method="Composite" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#usediamondoperator" priority="3">
Explicit type arguments can be replaced by Diamond Operator
</violation>
<violation beginline="34" endline="34" begincolumn="33" endcolumn="50" rule="UseArrayListInsteadOfVector" ruleset="Performance" package="polyhedra" class="Composite" method="Composite" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_performance.html#usearraylistinsteadofvector" priority="3">
Use ArrayList instead of Vector
</violation>
<violation beginline="55" endline="55" begincolumn="21" endcolumn="36" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="add" variable="toAdd" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'toAdd' is not assigned and could be declared final
</violation>
<violation beginline="58" endline="58" begincolumn="9" endcolumn="39" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="add" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'poly' could be declared final
</violation>
<violation beginline="60" endline="60" begincolumn="37" endcolumn="57" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Composite" method="add" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="69" endline="69" begincolumn="23" endcolumn="42" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="scale" variable="scalingFactor" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'scalingFactor' is not assigned and could be declared final
</violation>
<violation beginline="69" endline="79" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="polyhedra" class="Composite" method="scale" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'scale(double)' is missing an @Override annotation.
</violation>
<violation beginline="72" endline="72" begincolumn="13" endcolumn="68" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="scale" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'iter' could be declared final
</violation>
<violation beginline="74" endline="74" begincolumn="13" endcolumn="41" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="scale" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'poly' could be declared final
</violation>
<violation beginline="75" endline="75" begincolumn="13" endcolumn="37" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Composite" method="scale" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="76" endline="76" begincolumn="41" endcolumn="61" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Composite" method="scale" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="98" endline="112" begincolumn="12" endcolumn="5" rule="ProperCloneImplementation" ruleset="Error Prone" package="polyhedra" class="Composite" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#propercloneimplementation" priority="2">
Object clone() should be implemented with super.clone()
</violation>
<violation beginline="98" endline="112" begincolumn="12" endcolumn="5" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="polyhedra" class="Composite" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="98" endline="112" begincolumn="12" endcolumn="5" rule="CloneThrowsCloneNotSupportedException" ruleset="Error Prone" package="polyhedra" class="Composite" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonethrowsclonenotsupportedexception" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
<violation beginline="100" endline="100" begincolumn="9" endcolumn="41" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'aCopy' could be declared final
</violation>
<violation beginline="103" endline="103" begincolumn="13" endcolumn="24" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'p' could be declared final
</violation>
<violation beginline="105" endline="105" begincolumn="13" endcolumn="57" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Composite" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (static property access)
</violation>
<violation beginline="106" endline="106" begincolumn="13" endcolumn="60" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Composite" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="115" endline="115" begincolumn="27" endcolumn="36" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="equals" variable="rhs" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'rhs' is not assigned and could be declared final
</violation>
<violation beginline="118" endline="118" begincolumn="13" endcolumn="25" rule="OnlyOneReturn" ruleset="Code Style" package="polyhedra" class="Composite" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="121" endline="121" begincolumn="9" endcolumn="43" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="equals" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'rhsComp' could be declared final
</violation>
<violation beginline="142" endline="142" begincolumn="9" endcolumn="47" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'bld' could be declared final
</violation>
<violation beginline="144" endline="144" begincolumn="20" endcolumn="52" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Composite" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="144" endline="144" begincolumn="20" endcolumn="52" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Composite" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="144" endline="144" begincolumn="9" endcolumn="54" rule="ConsecutiveAppendsShouldReuse" ruleset="Performance" package="polyhedra" class="Composite" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_performance.html#consecutiveappendsshouldreuse" priority="3">
StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
</violation>
<violation beginline="145" endline="145" begincolumn="20" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Composite" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="148" endline="148" begincolumn="13" endcolumn="27" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Composite" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'poly' could be declared final
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/CreatePolyhedra.java">
<violation beginline="16" endline="131" begincolumn="36" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="polyhedra" class="CreatePolyhedra" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="16" endline="131" begincolumn="14" endcolumn="1" rule="ClassNamingConventions" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#classnamingconventions" priority="1">
The utility class name 'CreatePolyhedra' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
</violation>
<violation beginline="35" endline="35" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="37" endline="37" begincolumn="27" endcolumn="27" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="38" endline="38" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.err.println is used
</violation>
<violation beginline="39" endline="39" begincolumn="13" endcolumn="23" rule="DoNotCallSystemExit" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#donotcallsystemexit" priority="3">
System.exit() should not be used in J2EE/JEE apps
</violation>
<violation beginline="42" endline="45" begincolumn="13" endcolumn="55" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" variable="scalingFactor" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'scalingFactor' (lines '42'-'45').
</violation>
<violation beginline="45" endline="45" begincolumn="29" endcolumn="55" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="47" endline="47" begincolumn="33" endcolumn="33" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="52" endline="52" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.err.println is used
</violation>
<violation beginline="53" endline="53" begincolumn="13" endcolumn="23" rule="DoNotCallSystemExit" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#donotcallsystemexit" priority="3">
System.exit() should not be used in J2EE/JEE apps
</violation>
<violation beginline="56" endline="56" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.err.println is used
</violation>
<violation beginline="59" endline="65" begincolumn="13" endcolumn="53" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" variable="polyIn" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'polyIn' (lines '59'-'65').
</violation>
<violation beginline="62" endline="62" begincolumn="45" endcolumn="54" rule="AvoidFileStream" ruleset="Performance" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_performance.html#avoidfilestream" priority="1">
Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
</violation>
<violation beginline="62" endline="62" begincolumn="28" endcolumn="35" rule="CloseResource" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" variable="polyFile" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this FileReader object are closed after use
</violation>
<violation beginline="62" endline="62" begincolumn="13" endcolumn="63" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'polyFile' could be declared final
</violation>
<violation beginline="63" endline="63" begincolumn="28" endcolumn="37" rule="CloseResource" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" variable="polyBuffer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this FileReader object are closed after use
</violation>
<violation beginline="63" endline="63" begincolumn="13" endcolumn="68" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'polyBuffer' could be declared final
</violation>
<violation beginline="68" endline="68" begincolumn="13" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="68" endline="68" begincolumn="13" endcolumn="29" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.err.printf is used
</violation>
<violation beginline="69" endline="69" begincolumn="13" endcolumn="23" rule="DoNotCallSystemExit" ruleset="Error Prone" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#donotcallsystemexit" priority="3">
System.exit() should not be used in J2EE/JEE apps
</violation>
<violation beginline="73" endline="73" begincolumn="9" endcolumn="53" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'polyhedra' could be declared final
</violation>
<violation beginline="74" endline="74" begincolumn="9" endcolumn="83" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'scaledCopies' could be declared final
</violation>
<violation beginline="78" endline="78" begincolumn="9" endcolumn="26" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="79" endline="79" begincolumn="9" endcolumn="26" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="92" endline="92" begincolumn="9" endcolumn="26" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="printPolyhedra" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="93" endline="93" begincolumn="9" endcolumn="26" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="printPolyhedra" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="95" endline="95" begincolumn="14" endcolumn="28" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" method="printPolyhedra" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'poly' could be declared final
</violation>
<violation beginline="96" endline="96" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" package="polyhedra" class="CreatePolyhedra" method="printPolyhedra" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="111" endline="113" begincolumn="9" endcolumn="56" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" method="duplicateAndScale" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'scaledCopies' could be declared final
</violation>
<violation beginline="111" endline="113" begincolumn="41" endcolumn="56" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="CreatePolyhedra" method="duplicateAndScale" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="111" endline="113" begincolumn="41" endcolumn="56" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="CreatePolyhedra" method="duplicateAndScale" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="115" endline="115" begincolumn="9" endcolumn="28" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="polyhedra" class="CreatePolyhedra" method="duplicateAndScale" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'scaledCopies'
</violation>
<violation beginline="129" endline="129" begincolumn="66" endcolumn="67" rule="AddEmptyString" ruleset="Performance" package="polyhedra" class="CreatePolyhedra" method="createDivider" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_performance.html#addemptystring" priority="3">
Do not add empty strings
</violation>
<violation beginline="129" endline="129" begincolumn="16" endcolumn="79" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="CreatePolyhedra" method="createDivider" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/Cylinder.java">
<violation beginline="34" endline="34" begincolumn="38" endcolumn="38" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Cylinder" method="Cylinder" variable="h" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like h
</violation>
<violation beginline="34" endline="34" begincolumn="28" endcolumn="28" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Cylinder" method="Cylinder" variable="r" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like r
</violation>
<violation beginline="34" endline="34" begincolumn="31" endcolumn="38" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Cylinder" method="Cylinder" variable="h" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'h' is not assigned and could be declared final
</violation>
<violation beginline="34" endline="34" begincolumn="21" endcolumn="28" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Cylinder" method="Cylinder" variable="r" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'r' is not assigned and could be declared final
</violation>
<violation beginline="51" endline="51" begincolumn="22" endcolumn="22" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Cylinder" method="getBoundingBox" variable="h" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like h
</violation>
<violation beginline="52" endline="52" begincolumn="22" endcolumn="22" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Cylinder" method="getBoundingBox" variable="d" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like d
</violation>
<violation beginline="82" endline="82" begincolumn="34" endcolumn="34" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Cylinder" method="setRadius" variable="r" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like r
</violation>
<violation beginline="82" endline="82" begincolumn="27" endcolumn="34" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Cylinder" method="setRadius" variable="r" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'r' is not assigned and could be declared final
</violation>
<violation beginline="92" endline="92" begincolumn="34" endcolumn="34" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Cylinder" method="setHeight" variable="h" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like h
</violation>
<violation beginline="92" endline="92" begincolumn="27" endcolumn="34" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Cylinder" method="setHeight" variable="h" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'h' is not assigned and could be declared final
</violation>
<violation beginline="108" endline="112" begincolumn="12" endcolumn="5" rule="ProperCloneImplementation" ruleset="Error Prone" package="polyhedra" class="Cylinder" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#propercloneimplementation" priority="2">
Object clone() should be implemented with super.clone()
</violation>
<violation beginline="108" endline="112" begincolumn="12" endcolumn="5" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="polyhedra" class="Cylinder" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="108" endline="112" begincolumn="12" endcolumn="5" rule="CloneThrowsCloneNotSupportedException" ruleset="Error Prone" package="polyhedra" class="Cylinder" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonethrowsclonenotsupportedexception" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
<violation beginline="115" endline="115" begincolumn="23" endcolumn="42" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Cylinder" method="scale" variable="scalingFactor" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'scalingFactor' is not assigned and could be declared final
</violation>
<violation beginline="124" endline="124" begincolumn="27" endcolumn="36" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Cylinder" method="equals" variable="rhs" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'rhs' is not assigned and could be declared final
</violation>
<violation beginline="128" endline="128" begincolumn="13" endcolumn="25" rule="OnlyOneReturn" ruleset="Code Style" package="polyhedra" class="Cylinder" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="131" endline="131" begincolumn="9" endcolumn="45" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Cylinder" method="equals" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'rhsCylinder' could be declared final
</violation>
<violation beginline="133" endline="133" begincolumn="16" endcolumn="77" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Cylinder" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="141" endline="141" begincolumn="15" endcolumn="52" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Cylinder" method="hashCode" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="141" endline="141" begincolumn="15" endcolumn="52" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Cylinder" method="hashCode" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="142" endline="142" begincolumn="15" endcolumn="52" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Cylinder" method="hashCode" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="142" endline="142" begincolumn="15" endcolumn="52" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Cylinder" method="hashCode" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="148" endline="148" begincolumn="16" endcolumn="48" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Cylinder" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="148" endline="148" begincolumn="16" endcolumn="48" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Cylinder" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="162" endline="162" begincolumn="32" endcolumn="47" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Cylinder" method="fromDimensions" variable="theDims" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'theDims' is not assigned and could be declared final
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/Point.java">
<violation beginline="12" endline="12" begincolumn="19" endcolumn="19" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Point" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="12" endline="12" begincolumn="19" endcolumn="19" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="polyhedra" class="Point" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="13" endline="13" begincolumn="19" endcolumn="19" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Point" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
<violation beginline="13" endline="13" begincolumn="19" endcolumn="19" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="polyhedra" class="Point" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="14" endline="14" begincolumn="19" endcolumn="19" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Point" variable="z" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like z
</violation>
<violation beginline="14" endline="14" begincolumn="19" endcolumn="19" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="polyhedra" class="Point" variable="z" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="65" endline="65" begincolumn="31" endcolumn="32" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Point" method="Point" variable="dx" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like dx
</violation>
<violation beginline="65" endline="65" begincolumn="48" endcolumn="49" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Point" method="Point" variable="dy" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like dy
</violation>
<violation beginline="65" endline="65" begincolumn="65" endcolumn="66" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Point" method="Point" variable="dz" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like dz
</violation>
<violation beginline="85" endline="85" begincolumn="27" endcolumn="36" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Point" method="equals" variable="rhs" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'rhs' is not assigned and could be declared final
</violation>
<violation beginline="88" endline="88" begincolumn="13" endcolumn="25" rule="OnlyOneReturn" ruleset="Code Style" package="polyhedra" class="Point" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="93" endline="93" begincolumn="14" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Point" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="94" endline="94" begincolumn="13" endcolumn="25" rule="OnlyOneReturn" ruleset="Code Style" package="polyhedra" class="Point" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="97" endline="97" begincolumn="14" endcolumn="63" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Point" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="98" endline="98" begincolumn="13" endcolumn="25" rule="OnlyOneReturn" ruleset="Code Style" package="polyhedra" class="Point" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="101" endline="101" begincolumn="16" endcolumn="65" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Point" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="113" endline="116" begincolumn="12" endcolumn="5" rule="ProperCloneImplementation" ruleset="Error Prone" package="polyhedra" class="Point" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#propercloneimplementation" priority="2">
Object clone() should be implemented with super.clone()
</violation>
<violation beginline="113" endline="116" begincolumn="12" endcolumn="5" rule="CloneThrowsCloneNotSupportedException" ruleset="Error Prone" package="polyhedra" class="Point" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonethrowsclonenotsupportedexception" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/Polyhedron.java">
<violation beginline="36" endline="36" begincolumn="5" endcolumn="23" rule="CloneThrowsCloneNotSupportedException" ruleset="Error Prone" package="polyhedra" class="Polyhedron" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonethrowsclonenotsupportedexception" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
<violation beginline="48" endline="48" begincolumn="9" endcolumn="27" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Polyhedron" method="cloneAndScale" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="62" endline="64" begincolumn="16" endcolumn="51" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Polyhedron" method="toStringHelper" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="62" endline="64" begincolumn="16" endcolumn="51" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Polyhedron" method="toStringHelper" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/PolyhedronFactory.java">
<violation beginline="6" endline="90" begincolumn="14" endcolumn="1" rule="ClassNamingConventions" ruleset="Code Style" package="polyhedra" class="PolyhedronFactory" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#classnamingconventions" priority="1">
The utility class name 'PolyhedronFactory' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'
</violation>
<violation beginline="27" endline="27" begincolumn="14" endcolumn="33" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="PolyhedronFactory" method="createPolyhedron" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'polyModel' could be declared final
</violation>
<violation beginline="29" endline="29" begincolumn="17" endcolumn="58" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="PolyhedronFactory" method="createPolyhedron" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="30" endline="30" begincolumn="17" endcolumn="41" rule="OnlyOneReturn" ruleset="Code Style" package="polyhedra" class="PolyhedronFactory" method="createPolyhedron" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="46" endline="46" begincolumn="14" endcolumn="33" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="PolyhedronFactory" method="isKnown" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'polyModel' could be declared final
</violation>
<violation beginline="48" endline="48" begincolumn="17" endcolumn="58" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="PolyhedronFactory" method="isKnown" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="49" endline="49" begincolumn="17" endcolumn="28" rule="OnlyOneReturn" ruleset="Code Style" package="polyhedra" class="PolyhedronFactory" method="isKnown" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="64" endline="64" begincolumn="9" endcolumn="47" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="PolyhedronFactory" method="listKnown" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'bld' could be declared final
</violation>
<violation beginline="66" endline="66" begincolumn="14" endcolumn="33" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="PolyhedronFactory" method="listKnown" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'polyModel' could be declared final
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/Sphere.java">
<violation beginline="27" endline="27" begincolumn="26" endcolumn="26" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Sphere" method="Sphere" variable="r" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like r
</violation>
<violation beginline="27" endline="27" begincolumn="19" endcolumn="26" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Sphere" method="Sphere" variable="r" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'r' is not assigned and could be declared final
</violation>
<violation beginline="41" endline="41" begincolumn="22" endcolumn="22" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Sphere" method="getBoundingBox" variable="d" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like d
</violation>
<violation beginline="61" endline="61" begincolumn="34" endcolumn="34" rule="ShortVariable" ruleset="Code Style" package="polyhedra" class="Sphere" method="setRadius" variable="r" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like r
</violation>
<violation beginline="61" endline="61" begincolumn="27" endcolumn="34" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Sphere" method="setRadius" variable="r" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'r' is not assigned and could be declared final
</violation>
<violation beginline="77" endline="77" begincolumn="23" endcolumn="42" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Sphere" method="scale" variable="scalingFactor" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'scalingFactor' is not assigned and could be declared final
</violation>
<violation beginline="83" endline="86" begincolumn="12" endcolumn="5" rule="ProperCloneImplementation" ruleset="Error Prone" package="polyhedra" class="Sphere" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#propercloneimplementation" priority="2">
Object clone() should be implemented with super.clone()
</violation>
<violation beginline="83" endline="86" begincolumn="12" endcolumn="5" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="polyhedra" class="Sphere" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="83" endline="86" begincolumn="12" endcolumn="5" rule="CloneThrowsCloneNotSupportedException" ruleset="Error Prone" package="polyhedra" class="Sphere" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#clonethrowsclonenotsupportedexception" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
<violation beginline="89" endline="89" begincolumn="27" endcolumn="36" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Sphere" method="equals" variable="rhs" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'rhs' is not assigned and could be declared final
</violation>
<violation beginline="92" endline="92" begincolumn="13" endcolumn="25" rule="OnlyOneReturn" ruleset="Code Style" package="polyhedra" class="Sphere" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="95" endline="95" begincolumn="9" endcolumn="39" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Sphere" method="equals" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'rhsSphere' could be declared final
</violation>
<violation beginline="97" endline="97" begincolumn="16" endcolumn="75" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Sphere" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="104" endline="104" begincolumn="16" endcolumn="53" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Sphere" method="hashCode" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="104" endline="104" begincolumn="16" endcolumn="53" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Sphere" method="hashCode" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="110" endline="110" begincolumn="16" endcolumn="48" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Sphere" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="110" endline="110" begincolumn="16" endcolumn="48" rule="LawOfDemeter" ruleset="Design" package="polyhedra" class="Sphere" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="124" endline="124" begincolumn="32" endcolumn="47" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra" class="Sphere" method="fromDimensions" variable="theDims" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'theDims' is not assigned and could be declared final
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/TraitFromDimensions.java">
<violation beginline="23" endline="23" begincolumn="25" endcolumn="40" rule="UseVarargs" ruleset="Best Practices" package="polyhedra" class="TraitFromDimensions" method="fromDimensions" variable="theDims" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#usevarargs" priority="4">
Consider using varargs for methods or constructors which take an array the last parameter.
</violation>
</file>
<file name="/home/crusaton/spaghetticode/school/cs330fall2020/java/polyhedra_java_3/src/main/java/polyhedra/io/PolyhedronReader.java">
<violation beginline="22" endline="22" begincolumn="28" endcolumn="36" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="polyhedra.io" class="PolyhedronReader" variable="theBuffer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="22" endline="22" begincolumn="28" endcolumn="36" rule="ImmutableField" ruleset="Design" package="polyhedra.io" class="PolyhedronReader" variable="theBuffer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'theBuffer' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="31" endline="31" begincolumn="29" endcolumn="50" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="PolyhedronReader" variable="aBuffer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'aBuffer' is not assigned and could be declared final
</violation>
<violation beginline="48" endline="53" begincolumn="13" endcolumn="68" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="polyhedra.io" class="PolyhedronReader" method="createAndRead" variable="ply" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'ply' (lines '48'-'53').
</violation>
<violation beginline="55" endline="72" begincolumn="13" endcolumn="13" rule="ConfusingTernary" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="createAndRead" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#confusingternary" priority="3">
Avoid if (x != y) ..; else ..;
</violation>
<violation beginline="57" endline="57" begincolumn="21" endcolumn="75" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="createAndRead" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'dimPoly' could be declared final
</violation>
<violation beginline="61" endline="61" begincolumn="21" endcolumn="51" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="createAndRead" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'cmp' could be declared final
</violation>
<violation beginline="86" endline="86" begincolumn="43" endcolumn="69" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="initFromDimensions" variable="dimPoly" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'dimPoly' is not assigned and could be declared final
</violation>
<violation beginline="87" endline="87" begincolumn="43" endcolumn="53" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="initFromDimensions" variable="snr" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'snr' is not assigned and could be declared final
</violation>
<violation beginline="109" endline="109" begincolumn="54" endcolumn="67" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="readMultiple" variable="poly" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'poly' is not assigned and could be declared final
</violation>
<violation beginline="109" endline="109" begincolumn="37" endcolumn="51" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="readMultiple" variable="scanner" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'scanner' is not assigned and could be declared final
</violation>
<violation beginline="111" endline="111" begincolumn="9" endcolumn="44" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="readMultiple" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'numPolyhedra' could be declared final
</violation>
<violation beginline="114" endline="114" begincolumn="13" endcolumn="62" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="readMultiple" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'innerPoly' could be declared final
</violation>
<violation beginline="130" endline="130" begincolumn="9" endcolumn="54" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="readAll" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'polyhedra' could be declared final
</violation>
<violation beginline="131" endline="131" begincolumn="26" endcolumn="28" rule="CloseResource" ruleset="Error Prone" package="polyhedra.io" class="PolyhedronReader" method="readAll" variable="inf" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this Scanner object are closed after use
</violation>
<violation beginline="131" endline="131" begincolumn="9" endcolumn="59" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="readAll" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'inf' could be declared final
</violation>
<violation beginline="134" endline="134" begincolumn="13" endcolumn="53" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="polyhedra.io" class="PolyhedronReader" method="readAll" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'poly' could be declared final
</violation>
</file>
<configerror rule="LoosePackageCoupling" msg="No packages or classes specified"/>
</pmd>
